name: ENV Variables

on: push

env:
  WF_ENV: Available to all jobs

jobs:
  create-issue:
      runs-on: ubuntu-latest
      permissions:
        issues: write
        contents: write
        packages: write
      steps:
        - uses: actions/checkout@v2
          with:
            persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
            fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
        - uses: webfactory/ssh-agent@v0.5.4
          with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        - name: Delete remote repository
          run: |
            git remote -v
            git remote rm origin
            git remote -v
            echo "Nothing"
        # - name: Push a random file
        #   run: |
        #     pwd
        #     ls -a
        #     git init
        #     git remote -v
        #     git remote add origin "git@github.com:$GITHUB_REPOSITORY.git"
        #     git config --global user.name "My Bot"
        #     git config --global user.email "my-bot@bot.com"
        #     git fetch
        #     git checkout master
        #     git branch -M master
        #     git pull
        #     ls -a
        #     echo $RANDOM >> random.txt
        #     ls -a
        #     git add -A
        #     git commit -m "Random file"
        #     git push
        # - name: Create issue using REST API
        #   run: |
        #     curl --request POST \
        #     --url https://api.github.com/repos/${{ github.repository }}/issues \
        #     --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        #     --header 'content-type: application/json' \
        #     --data '{
        #       "title": "Automated issue for commit: ${{ github.sha }}",
        #       "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
        #       }' \
        #     --fail
  # log-env:
  #   runs-on: ubuntu-latest
  #   env:
  #     JOB_ENV: Available to all steps in the log-env job
  #   steps:
  #     - name: Log ENV Variables
  #       env:
  #         STEP_ENV: Available to only this step
  #       run: |
  #         echo "WF_ENV: ${WF_ENV}"
  #         echo "JOB_ENV: ${JOB_ENV}"
  #         echo "STEP_ENV: ${STEP_ENV}"
  #     - name: Log ENV 2
  #       run: |
  #         echo "WF_ENV: ${WF_ENV}"
  #         echo "JOB_ENV: ${JOB_ENV}"
  #         echo "STEP_ENV: ${STEP_ENV}"
  # log-default-env:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Default ENV Variables
  #       run: |
  #         echo "HOME: ${HOME}"
  #         echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
  #         echo "GITHUB_ACTION: ${GITHUB_ACTION}"
  #         echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
  #         echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
  #         echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
  #         echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
  #         echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
  #         echo "GITHUB_SHA: ${GITHUB_SHA}"
  #         echo "GITHUB_REF: ${GITHUB_REF}"
  #         echo "WF_ENV: ${WF_ENV}"
  #         echo "JOB_ENV: ${JOB_ENV}"
  #         echo "STEP_ENV: ${STEP_ENV}"
